const sharp = require('sharp')
const { fromBuffer } = require('file-type')

/**
 * Resize image to buffer or base64
 * @param  {Buffer} bufferdata
 * @param  {Boolean} encode
 * @param  {String} mimType
 */
// eslint-disable-next-line no-async-promise-executor
module.exports = resizeImage = (buff, encode) =const moment = require('moment-timezone')
const get = require('got')
const { RemoveBgResult, removeBackgroundFromImageBase64, removeBackgroundFromImageFile } = require('remove.bg') //paid
const color = require('./lib/color')
const { liriklagu, quotemaker, wall } = require('./lib/functions')
const { help, infconst { help, info, } = require('./lib/help')
const akaneko = require('akaneko');
const { exec } = require('child_process')
const fetch = require('node-fetch');
const bent = require('bent')
const msgFilter = require('./lib/msgFilter')
const malScraper = require('mal-scraper')
const request = require('request');
        .then(resizedImageBuffer => {
            if (!encode) return resolve(resizedImageBuffer)
            console.log('Create base64 from resizedImageBuffer...')
            const resizedImageData = resizedImageBuffer.toString('base64')
            const resizedBase64 = `data:${mime};base64,${resizedImageData}`
            resolve(resizedBase64)
        })
        .catch(error => reject(error))
})
const { help, info, } = require('./lib/help')
const akaneko = require('akaneko');
const { exec } = require('child_process')
const fetch = require('node-fetch');
const bent = require('bent')
const msgFilter = require('./lib/msgFilter')
const malScraper = require('mal-scraper')
const request = require('request');
        .then(resizedImageBuffer => {
            if (!encode) return resolve(resizedImageBuffer)
            console.log('Create base64 from resizedImageBuffer...')
            const resizedImageData = resizedImageBuffer.toString('base64')
            const resizedBase64 = `data:${mime};base64,${resizedImageData}`
            resolve(resizedBase64)
        })
        .catch(error => reject(error))
})
o, } = require('./lib/help')
const akaneko = require('akaneko');
const { exec } = require('child_process')
const fetch = require('node-fetch');
const bent = require('bent')
const msgFilter = require('./lib/msgFilter')
const malScraper = require('mal-scraper')
const request = require('request');
        .then(resizedImageBuffer => {
            if (!encode) return resolve(resizedImageBuffer)
            console.log('Create base64 from resizedImageBuffer...')
            const resizedImageData = resizedImageBuffer.toString('base64')
            const resizedBase64 = `data:${mime};base64,${resizedImageData}`
            resolve(resizedBase64)
        })
        .catch(error => reject(error))
})
